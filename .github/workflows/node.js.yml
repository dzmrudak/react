# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_call:
    inputs:
      shard_number:
        required: true
        type: string
      total_number_of_shards:
        required: true
        type: string

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm install
    - name: Build
      run: npm run build
    - run: CI=true npm run test
    - name: Run WebDriverIO tests
      run: |
        echo "Running WebDriverIO tests"
        npx wdio run ./wdio.conf.js
  shard-playwright-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Shard Playwright tests
        run: |
          # Calculate the number of tests per shard
          total_shards=${{ github.event.inputs.total_number_of_shards }}
          total_tests=$(npx playwright test --list | grep -c "\- ")
          tests_per_shard=$((total_tests / total_shards + 1))
          
          # Calculate the range of tests to run for this shard
          shard_number=${{ github.event.inputs.shard_number }}
          start_test=$((tests_per_shard * (shard_number - 1) + 1))
          end_test=$((tests_per_shard * shard_number))
          test_range="${start_test}..${end_test}"
          
          # Run the Playwright tests using the test range
          npx playwright test --repeat 1 --workers 1 --test-match "${test_range}"